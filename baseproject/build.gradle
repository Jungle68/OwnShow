apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'jacoco' //测试报告
apply from: "$rootDir/jacocoCoverage.gradle"
apply plugin: 'me.tatarka.retrolambda'

jacoco {
    toolVersion = "0.7.8"
    reportsDir = file("$buildDir/customJacocoReportDir")
}


android {
    def gConfig = rootProject.extensions.getByName("ext")
    compileSdkVersion gConfig["compileSdkVersion"]
    buildToolsVersion gConfig["buildToolsVersion"]
    defaultConfig {
        minSdkVersion gConfig["minSdkVersion"]
        targetSdkVersion gConfig["targetSdkVersion"]
        versionCode gConfig["versionCode"]
        versionName gConfig["versionName"]
        testInstrumentationRunner gConfig.testDependencies.androidJUnitRunner

        // 友盟三方key配置
        manifestPlaceholders = [
                TECENT_APPID: 1105978541,
                UMENG_APPKEY: "594221af4ad1560587001c9d",
        ]
    }
    buildTypes { // 作为libary时只会触发 relase
        release {
            buildConfigField "boolean", "USE_LOG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "USE_LOG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        // if true, only report errors.
        ignoreWarnings true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.1'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.6.0'
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    }
}

greendao {
    /**
     * daoPackage 生成的DAO，DaoMaster和DaoSession的包名。默认是实体的包名。
     * targetGenDir 生成源文件的路径。默认源文件目录是在build目录中的(build/generated/source/greendao)。
     * generateTests 设置是否自动生成单元测试。
     * targetGenDirTest 生成的单元测试的根目录。
     */
    schemaVersion 1
//    daoPackage 'com.jungle68.ownshow.bean'
    generateTests true
    //targetGenDir 'src/main/java'
}


configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-annotations:25.0.1'
        force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    def testDependences = rootProject.ext.testDependencies
    def dataDependences = rootProject.ext.dataDependencies
    def sdkSoupportDependences = rootProject.ext.sdksoupportDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    // Sdksoupport dependencies
    compile sdkSoupportDependences.appcompatV7
    compile sdkSoupportDependences.rxpermissions
    compile sdkSoupportDependences.annotations
    // Image
    compile dataDependences.glide
    // Eventbus
    compile dataDependences.androideventbus
    // Dagger dependencies
    compile dataDependences.dagger
    provided dataDependences.javaxAnnotation
    annotationProcessor dataDependences.daggerCompiler
    // Retrofit + rx + gson
    compile dataDependences.retrofit
    compile dataDependences.retrofitConverterGson
    compile dataDependences.retrofitAdapterRxJava
    compile dataDependences.rxJava
    compile dataDependences.rxAndroid
    compile dataDependences.rxlifecycle
    compile dataDependences.rxlifecycleAndroid
    compile dataDependences.rxlifecycleComponents
    compile dataDependences.rxlifecycleKotlin
    compile dataDependences.rxbinding
    compile dataDependences.rxbindingSupportV4
    compile dataDependences.rxbindingSupportV7
    compile dataDependences.rxbindingDesign
    compile dataDependences.rxbindingDesignrRcyclerviewV7
    compile dataDependences.clickSpanLink // click span
    compile dataDependences.gson
    compile dataDependences.rxcache
    compile dataDependences.rxcacheJolyglotGson
    // database
    compile dataDependences.greendao
    compile dataDependences.greendaoSqlcipher

    // Butterknife
    compile dataDependences.butterknife
    annotationProcessor dataDependences.butterknifeApt
    // Log
    compile dataDependences.logger
    // umeng
    compile dataDependences.umeng

    // Development
    debugCompile developmentDependencies.leakCanaryDebug
    releaseCompile developmentDependencies.leakCanaryRelease
    testCompile developmentDependencies.leakCanaryTest
    // Test
    testCompile testDependences.junit
    testCompile testDependencies.multidexTest
    //分包
    compile dataDependences.multidex
    // project
    compile project(":mysnackbar")

}

